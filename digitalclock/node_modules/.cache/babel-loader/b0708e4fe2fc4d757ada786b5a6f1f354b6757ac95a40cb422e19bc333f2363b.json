{"ast":null,"code":"var _jsxFileName = \"D:\\\\DigitalClock\\\\digitalclock\\\\src\\\\Clock.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Clock = () => {\n  _s();\n  let curtime = new Date();\n  let time = curtime.toLocaleTimeString();\n  let day = curtime.toLocaleDateString();\n  const [newTime, setNewTime] = useState(time);\n  const [DayDate, setDayDate] = useState(day);\n  setInterval(() => {\n    let curtime = new Date();\n    let time = curtime.toLocaleTimeString();\n    let day = curtime.toLocaleDateString();\n    setNewTime(time);\n  }, 1000);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: newTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: DayDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Clock, \"gHfbdeiYM07k6dUYHSsMS9NaR2Q=\");\n_c = Clock;\nexport default Clock;\nvar _c;\n$RefreshReg$(_c, \"Clock\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Clock","_s","curtime","Date","time","toLocaleTimeString","day","toLocaleDateString","newTime","setNewTime","DayDate","setDayDate","setInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/DigitalClock/digitalclock/src/Clock.jsx"],"sourcesContent":["import React , {useState} from 'react';\r\n\r\n\r\n\r\nconst Clock = ()=>{\r\n    let curtime = new Date();\r\n    let time = curtime.toLocaleTimeString()\r\n    let day = curtime.toLocaleDateString()\r\n\r\n    const [newTime , setNewTime] = useState(time)\r\n    const [DayDate , setDayDate] = useState(day)\r\n    setInterval(()=>{\r\n        let curtime = new Date();\r\n        let time = curtime.toLocaleTimeString()\r\n        let day = curtime.toLocaleDateString()\r\n        setNewTime(time)\r\n    } ,1000 )\r\n    return (\r\n       <>\r\n        <h1>{newTime}</h1>\r\n        <h2>{DayDate}</h2></>\r\n    );\r\n}\r\nexport default Clock;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAIvC,MAAMC,KAAK,GAAGA,CAAA,KAAI;EAAAC,EAAA;EACd,IAAIC,OAAO,GAAG,IAAIC,IAAI,EAAE;EACxB,IAAIC,IAAI,GAAGF,OAAO,CAACG,kBAAkB,EAAE;EACvC,IAAIC,GAAG,GAAGJ,OAAO,CAACK,kBAAkB,EAAE;EAEtC,MAAM,CAACC,OAAO,EAAGC,UAAU,CAAC,GAAGd,QAAQ,CAACS,IAAI,CAAC;EAC7C,MAAM,CAACM,OAAO,EAAGC,UAAU,CAAC,GAAGhB,QAAQ,CAACW,GAAG,CAAC;EAC5CM,WAAW,CAAC,MAAI;IACZ,IAAIV,OAAO,GAAG,IAAIC,IAAI,EAAE;IACxB,IAAIC,IAAI,GAAGF,OAAO,CAACG,kBAAkB,EAAE;IACvC,IAAIC,GAAG,GAAGJ,OAAO,CAACK,kBAAkB,EAAE;IACtCE,UAAU,CAACL,IAAI,CAAC;EACpB,CAAC,EAAE,IAAI,CAAE;EACT,oBACGP,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBACChB,OAAA;MAAAgB,QAAA,EAAKL;IAAO;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAClBpB,OAAA;MAAAgB,QAAA,EAAKH;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;EAAA,gBAAG;AAE7B,CAAC;AAAAhB,EAAA,CAlBKD,KAAK;AAAAkB,EAAA,GAALlB,KAAK;AAmBX,eAAeA,KAAK;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}